-- Gui to Lua
-- Version: 3.2

-- Instances:

local HyperLoop4 = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local hyperloop = Instance.new("TextButton")

--Properties:

HyperLoop4.Name = "HyperLoop4"
HyperLoop4.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
HyperLoop4.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
HyperLoop4.ResetOnSpawn = false

Frame.Parent = HyperLoop4
Frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.440026969, 0, 0.413237303, 0)
Frame.Size = UDim2.new(0, 196, 0, 84)

hyperloop.Name = "hyperloop"
hyperloop.Parent = Frame
hyperloop.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
hyperloop.BorderColor3 = Color3.fromRGB(0, 0, 0)
hyperloop.BorderSizePixel = 0
hyperloop.Position = UDim2.new(0.10204082, 0, 0.202380955, 0)
hyperloop.Size = UDim2.new(0, 158, 0, 50)
hyperloop.Font = Enum.Font.SourceSansBold
hyperloop.Text = "hyper loop pt 1"
hyperloop.TextColor3 = Color3.fromRGB(0, 0, 0)
hyperloop.TextSize = 20.000

-- Scripts:

local function JUZW_fake_script() -- hyperloop.RightUpperArm 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(-9e37, 9e37, -9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, 9e37, -9e37))
							end
						end)
					end
				end
	
				wait(0.07)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, 9e37, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.07)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(JUZW_fake_script)()
local function NFEW_fake_script() -- hyperloop.RightLowerArm 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, 9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e36, 9e36, 9e36))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e36, 9e36, 9e36))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightLowerArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, 9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.055)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, 9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.055)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(NFEW_fake_script)()
local function VNXNXS_fake_script() -- hyperloop.RightHand 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e37, 9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightHand, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, 9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.05)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightHand, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, 9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.05)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(VNXNXS_fake_script)()
local function GHMJ_fake_script() -- hyperloop.LeftUpperArm 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e36, -9e36, 9e36))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e36, -9e36, 9e36))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e36, -9e36, 9e36))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e36, -9e36, 9e36))
							end
						end)
					end
				end
	
				wait(0.03)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e36, -9e36, 9e36))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.03)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(GHMJ_fake_script)()
local function ZTQWF_fake_script() -- hyperloop.LeftLowerArm 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftLowerArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.02)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftLowerArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.02)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(ZTQWF_fake_script)()
local function BTZIGTG_fake_script() -- hyperloop.LeftHand 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftHand, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.015)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftHand, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.015)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(BTZIGTG_fake_script)()
local function QTRCQ_fake_script() -- hyperloop.RightUpperLeg 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e37, -9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(-9e37, -9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(-9e37, -9e37, -9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightUpperLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, -9e37, -9e37))
							end
						end)
					end
				end
	
				wait(0.075)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightUpperLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, -9e37, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.075)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(QTRCQ_fake_script)()
local function EQTB_fake_script() -- hyperloop.RightFoot 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.045)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.Left, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.045)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(EQTB_fake_script)()
local function CUCRYM_fake_script() -- hyperloop.LeftUpperLeg 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e36, -9e36, 9e36))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftUpperLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e36, -9e36, -9e36))
							end
						end)
					end
				end
	
				wait(0.035)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftUpperLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e36, -9e36, -9e36))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.035)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(CUCRYM_fake_script)()
local function FZXYTP_fake_script() -- hyperloop.RightLowerLeg 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, 9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, 9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, 9e37, -9e37))
							end
						end)
					end
				end
	
				wait(0.065)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, 9e37, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.065)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(FZXYTP_fake_script)()
local function HAXP_fake_script() -- hyperloop.LeftLowerLeg 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftLowerLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.025)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftLowerLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.025)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(HAXP_fake_script)()
local function THTZELU_fake_script() -- hyperloop.LeftFoot 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37))
							end
						end)
					end
				end
	
				wait(0.01)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(8.999999813669171e+37, -8.999999813669171e+37, -8.999999813669171e+37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.01)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(THTZELU_fake_script)()
local function MAXDAK_fake_script() -- hyperloop.LowerTorso 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(0/0, -0/0, 0/0))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(0/0, -0/0, 0/0))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(0/0, -0/0, 0/0))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LowerTorso, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(0/0, -0/0, 0/0))
							end
						end)
					end
				end
	
				wait(0.04)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LowerTorso, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9999999999999999999999999999999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999999999999999999999999))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.04)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(MAXDAK_fake_script)()
local function MOQS_fake_script() -- hyperloop.UpperTorso 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, -9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, -9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.UpperTorso, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, -9e37, -9e37))
							end
						end)
					end
				end
	
				wait(0.08)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightUpperArm, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, -9e37, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.08)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(MOQS_fake_script)()
local function ZRSZ_fake_script() -- hyperloop.HumanoidRootPart 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9223372036854776000, 9223372036854776000, 9223372036854776000))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
		HeadWaist:FireServer(CFrame.new(9223372036854776000, 9223372036854776000, 9223372036854776000))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
		headAngleChange:FireServer(CFrame.new(9223372036854776000, 9223372036854776000, 9223372036854776000))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.HumanoidRootPart, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9223372036854776000, 9223372036854776000, 9223372036854776000))
							end
						end)
					end
				end
	
				wait(0.005)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.HumanoidRootPart, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9223372036854776000, 9223372036854776000, 9223372036854776000))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.005)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(ZRSZ_fake_script)()
local function NGMGSC_fake_script() -- hyperloop.RightLowerLeg 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e37, 9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(-9e37, 9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.RightLowerLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, 9e37, -9e37))
							end
						end)
					end
				end
	
				wait(0.06)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.RightLowerLeg, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, 9e37, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.06)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(NGMGSC_fake_script)()
local function ZWRSJFP_fake_script() -- hyperloop.Head 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, -9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(-9e37, -9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.Head, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, -9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0,105)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.Head, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, -9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.105)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(ZWRSJFP_fake_script)()
local function PJRP_fake_script() -- hyperloop.for arm angle tests 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(0, 9e37, 0))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, 0, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(9e37, 0, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftFoot, Vector3.new(9e37, -9e37, 9e37)) -- Adjust the force to a lower value
							wait(0.2) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, 9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.1)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, 0, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.1)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(PJRP_fake_script)()
local function OIJO_fake_script() -- hyperloop.for arm angle tests 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e37, 0, 9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(-9e37, 9e37, 0))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(-9e37, 0, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftFoot, Vector3.new(9e37, -9e37, 9e37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, 0, 9e37))
							end
						end)
					end
				end
	
				wait(0.085)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, 9e37, 9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.085)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(OIJO_fake_script)()
local function XYXCAQG_fake_script() -- hyperloop.for arm angle tests 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(-9e37, 0, -9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(0, 9e37, -9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(-9e37, 0, -9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftFoot, Vector3.new(9e37, -9e37, 9e37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(-9e37, 9e37, 9e37))
							end
						end)
					end
				end
	
				wait(0.09)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(-9e37, 0, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.09)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(XYXCAQG_fake_script)()
local function OWYUNG_fake_script() -- hyperloop.for arm angle tests 
	local script = Instance.new('Script', hyperloop)

	function Click(mouse)
	
		local prefix = '+'
	
		repeat wait() until game:IsLoaded()
		local plrs = game:GetService("Players")
		local plr = plrs.LocalPlayer
		local loopAll = false
		local loopSinglePlayer = nil
		local whitelist = {"bamned_alt3"}  -- Username to avoid from getting looped
		local loopKill = {}
	
		local UserInputService = game:GetService("UserInputService")
	
		local function shouldAvoid(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function isWhitelisted(player)
			return table.find(whitelist, player.Name) ~= nil
		end
	
		local function handleRightArm(v)
			local rightArm = v.Character:FindFirstChild("Right Arm")
			if rightArm then
				rightArm:Destroy()
				local arm = Instance.new("Part")
				arm.Size = Vector3.new(1, 3, 1) -- Adjust size if needed
				arm.Position = v.Character.Torso.Position + Vector3.new(2, 0, 0) -- Adjust position if needed
				arm.Anchored = false
				arm.CanCollide = false
				arm.Color = Color3.new(1, 0, 0) -- Adjust color if needed
				arm.Parent = game.Workspace -- Make sure the arm is visible
			end
		end
	
		-- Function to apply changes to a player character
		local function ApplyChangesToPlayer(player)
			-- Check if the player's character exists
			local character = player.Character
			if character and not shouldAvoid(player) then
				-- Apply the desired changes to the ArmAngleChange remote event
				local armAngleChange = character:FindFirstChild("ArmAngleChange")
				if armAngleChange then
					armAngleChange:FireServer(CFrame.new(9e37, 0, -9e37))
				end
	
				-- Apply the desired changes to the HeadWaist
				local HeadWaist = character:FindFirstChild("HeadWaist")
				if HeadWaist then
					HeadWaist:FireServer(CFrame.new(9e37, 9e37, 9e37))
				end
	
				-- Apply the desired changes to the HeadAngleChange remote event
				local headAngleChange = character:FindFirstChild("HeadAngleChange")
				if headAngleChange then
					headAngleChange:FireServer(CFrame.new(-9e37, 9e37, 9e37))
				end
	
				-- Instantly kill the player
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoid.Health = 0
				end
			end
		end
	
		local function loopActions()
			while loopAll do
				for _, v in ipairs(plrs:GetPlayers()) do
					if v ~= plr and not shouldAvoid(v) then
						pcall(function()
							-- Launch player randomly
							local respawnPosition
							local rand = math.random(1, 4)
							if rand == 1 then
								-- Void
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							elseif rand == 2 then
								-- Sideways
								respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
							elseif rand == 3 then
								-- Sky
								respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
							else
								-- Space
								respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
							end
							v.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
							wait(0.0) -- Adjust the wait time if necessary
							plr.Character.Picking:FireServer(v.Character.LeftFoot, Vector3.new(9e37, -9e37, 9e37)) -- Adjust the force to a lower value
							wait(0.3) -- Adjust the wait time between picking and putting down
							plr.Character.PuttingDown:FireServer()
	
							-- Apply arm angle change
							local armAngleChange = v.Character:FindFirstChild("ArmAngleChange")
							if armAngleChange then
								armAngleChange:FireServer(CFrame.new(9e37, 0, -9e37))
							end
						end)
					end
				end
	
				wait(0.095)
			end
		end
	
		local function loopSinglePlayerActions()
			while loopSinglePlayer do
				local player = loopSinglePlayer
				if player and player.Character and not shouldAvoid(player) then
					pcall(function()
						-- Launch player randomly
						local respawnPosition
						local rand = math.random(1, 4)
						if rand == 1 then
							-- Void
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						elseif rand == 2 then
							-- Sideways
							respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
						elseif rand == 3 then
							-- Sky
							respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
						else
							-- Space
							respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
						end
						player.Character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
						wait(0.0) -- Adjust the wait time if necessary
						plr.Character.Picking:FireServer(player.Character.LeftFoot, Vector3.new(8.999999813669171e+37, -8.999999813669171e+37, 8.999999813669171e+37)) -- Adjust the force to a lower value
						wait(0.3) -- Adjust the wait time between picking and putting down
						plr.Character.PuttingDown:FireServer()
	
						-- Apply arm angle change
						local armAngleChange = player.Character:FindFirstChild("ArmAngleChange")
						if armAngleChange then
							armAngleChange:FireServer(CFrame.new(9e37, 0, -9e37))
						end
	
						ApplyChangesToPlayer(player)
					end)
				end
	
				wait(0.095)
			end
		end
	
		local function startLoopAll()
			loopAll = true
			spawn(loopActions)
		end
	
		local function stopLoopAll()
			loopAll = false
		end
	
		local function startLoopSinglePlayer(player)
			loopSinglePlayer = player
			spawn(loopSinglePlayerActions)
		end
	
		local function stopLoopSinglePlayer()
			loopSinglePlayer = nil
		end
	
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if not gameProcessed and input.KeyCode == Enum.KeyCode.G then
				if loopAll then
					stopLoopAll()
					stopLoopSinglePlayer()
				else
					startLoopAll()
				end
			end
		end)
	
		local function findPlayer(Target)
			if game:GetService("Players"):FindFirstChild(Target) then
				return game:GetService("Players"):FindFirstChild(Target)
			else
				if Target ~= nil and Target ~= "" and Target ~= " " and Target then
					local name = Target
					local found = false
					for _, v in pairs(game:GetService("Players"):GetPlayers()) do
						if not found and (v.Name:lower():sub(1, #name) == name:lower() or v.DisplayName:lower():sub(1, #name) == name:lower()) then
							name = v
							found = true
						end
					end
					if name ~= nil and name ~= Target then
						return name
					end
				end
			end
		end
	
		plr.Chatted:Connect(function(msg)
			local args = msg:lower():split(" ")
			local command = args[1]
			local target = args[2]
	
			if command == prefix .. "wl" and target then
				-- Add player to whitelist
				local playerToAdd = findPlayer(target)
				if playerToAdd and not isWhitelisted(playerToAdd) then
					table.insert(whitelist, playerToAdd.Name)
				end
			elseif command == prefix .. "lol" then
				startLoopAll()
			elseif command == prefix .. "rc" then
				stopLoopAll()
				stopLoopSinglePlayer()
			elseif command == prefix .. "kill" and target then
				-- Add player to loopKill and activate loopAll
				local playerToKill = findPlayer(target)
				if playerToKill then
					startLoopSinglePlayer(playerToKill)
				end
			end
		end)
	
		plr.CharacterAdded:Connect(function(character)
			-- Fling player randomly upon respawn
			local respawnPosition
			local rand = math.random(1, 4)
			if rand == 1 then
				-- Void
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			elseif rand == 2 then
				-- Sideways
				respawnPosition = Vector3.new(math.random(-50, 50), 200, math.random(-50, 50))
			elseif rand == 3 then
				-- Sky
				respawnPosition = Vector3.new(math.random(-50, 50), 500, math.random(-50, 50))
			else
				-- Space
				respawnPosition = Vector3.new(math.random(-50, 50), 1000, math.random(-50, 50)) -- Adjust Y position to make them float
			end
			character:SetPrimaryPartCFrame(CFrame.new(respawnPosition))
		end)
	end
	
	
	script.Parent.MouseButton1Down:connect(Click)
end
coroutine.wrap(OWYUNG_fake_script)()
local function JDZUHB_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local dragger = {}; 
	local resizer = {};
	
	do
		local mouse = game:GetService("Players").LocalPlayer:GetMouse();
		local inputService = game:GetService('UserInputService');
		local heartbeat = game:GetService("RunService").Heartbeat;
		-- // credits to Ririchi / Inori for this cute drag function :)
		function dragger.new(frame)
			local s, event = pcall(function()
				return frame.MouseEnter
			end)
	
			if s then
				frame.Active = true;
	
				event:connect(function()
					local input = frame.InputBegan:connect(function(key)
						if key.UserInputType == Enum.UserInputType.MouseButton1 then
							local objectPosition = Vector2.new(mouse.X - frame.AbsolutePosition.X, mouse.Y - frame.AbsolutePosition.Y);
							while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
								frame:TweenPosition(UDim2.new(0, mouse.X - objectPosition.X + (frame.Size.X.Offset * frame.AnchorPoint.X), 0, mouse.Y - objectPosition.Y + (frame.Size.Y.Offset * frame.AnchorPoint.Y)), 'Out', 'Quad', 0.1, true);
							end
						end
					end)
	
					local leave;
					leave = frame.MouseLeave:connect(function()
						input:disconnect();
						leave:disconnect();
					end)
				end)
			end
		end
	
		function resizer.new(p, s)
			p:GetPropertyChangedSignal('AbsoluteSize'):connect(function()
				s.Size = UDim2.new(s.Size.X.Scale, s.Size.X.Offset, s.Size.Y.Scale, p.AbsoluteSize.Y);
			end)
		end
	end
	script.Parent.Active = true
	script.Parent.Draggable = true
end
coroutine.wrap(JDZUHB_fake_script)()
