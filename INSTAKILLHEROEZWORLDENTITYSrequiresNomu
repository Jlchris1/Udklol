local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HoverGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Button
local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 150, 0, 35)
button.Position = UDim2.new(0, 20, 0, 20)
button.Text = "Start Void Hover"
button.TextScaled = true
button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Parent = screenGui

-- Variables
local platform = nil
local loopConnection = nil
local targetY = -2000
local hovering = false

-- Set void height to NaN
Workspace.FallenPartsDestroyHeight = 0/0

-- Helper: restore collisions for all parts
local function restoreCollisions()
    for _, part in ipairs(Workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
end

-- Helper: start hover
local function startHover()
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    if not platform then
        platform = Instance.new("Part")
        platform.Size = Vector3.new(100, 1, 100)
        platform.Anchored = true
        platform.CanCollide = true
        platform.Position = Vector3.new(hrp.Position.X, targetY - 0.5, hrp.Position.Z)
        platform.Color = Color3.fromRGB(60, 60, 60)
        platform.Material = Enum.Material.Neon
        platform.Transparency = 0.3
        platform.Name = "VoidPlatform"
        platform.Parent = Workspace
    end

    loopConnection = RunService.Heartbeat:Connect(function()
        if hrp and platform then
            hrp.CFrame = CFrame.new(platform.Position.X, targetY, platform.Position.Z)
        end
    end)

    hovering = true
    button.Text = "Stop Hover (Reset)"
end

-- Helper: stop hover and reset
local function stopHover()
    if loopConnection then
        loopConnection:Disconnect()
        loopConnection = nil
    end

    hovering = false
    button.Text = "Start Void Hover"

    -- Reset character
    player:LoadCharacter()
end

-- Button click
button.MouseButton1Click:Connect(function()
    if hovering then
        stopHover()
    else
        startHover()
    end
end)

-- Reconnect hover after respawn
player.CharacterAdded:Connect(function(char)
    restoreCollisions()
    -- Reset hovering state so button works again
    hovering = false
    button.Text = "Start Void Hover"
end)

player.CharacterRemoving:Connect(function(char)
    restoreCollisions()
end)
