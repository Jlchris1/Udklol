-- GripTargetGui_Compact.lua
-- Compact, mobile-friendly version of the Grip Target GUI

-- Services
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GripTargetGuiCompact"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.Parent = playerGui

local mainFrame = Instance.new("ScrollingFrame")
mainFrame.Size = UDim2.new(0, 280, 0, 320) -- smaller width and height
mainFrame.Position = UDim2.new(0, 10, 0.6, -160) -- lower on screen
mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
mainFrame.BackgroundTransparency = 0.5
mainFrame.ScrollBarThickness = 8
mainFrame.ZIndex = 5
mainFrame.Visible = true
mainFrame.Parent = screenGui

local listLayout = Instance.new("UIListLayout")
listLayout.FillDirection = Enum.FillDirection.Vertical
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
listLayout.VerticalAlignment = Enum.VerticalAlignment.Top
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 4)
listLayout.Parent = mainFrame

-- Helper for button creation
local function createButton(parent, text, posY)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 140, 0, 36) -- same size as original toggle/button
	button.Position = UDim2.new(0, 10, 0, posY)
	button.Text = text
	button.BackgroundColor3 = Color3.new(1, 1, 1)
	button.TextColor3 = Color3.new(0, 0, 0)
	button.ZIndex = 10
	button.Parent = parent
	return button
end

-- Buttons and TextBoxes
local buttonToggleMainFrame = createButton(screenGui, "Toggle GUI", 20) -- lowered toggle
local cooldownTextBox = Instance.new("TextBox")
cooldownTextBox.Size = UDim2.new(0, 120, 0, 36)
cooldownTextBox.Position = UDim2.new(0, 10, 0, 60)
cooldownTextBox.PlaceholderText = "Cooldown (sec)"
cooldownTextBox.BackgroundColor3 = Color3.new(1, 1, 1)
cooldownTextBox.Parent = mainFrame

local buttonAttachTool = createButton(mainFrame, "Attach Tool", 110)
local buttonAttachTargetAll = createButton(mainFrame, "Attach Target All", 160)
local buttonAttachSelected = createButton(mainFrame, "Attach Selected Target", 210)
local buttonNormalTargetAll = createButton(mainFrame, "Normal Target All", 260)
local buttonNormalSelected = createButton(mainFrame, "Normal Selected Target", 310)
local buttonLoadList = createButton(mainFrame, "Load Player List", 360)

-- Variables
local gripActive = false
local targetAllActive = false
local normalTargetActive = false
local attachSelectedActive = false
local normalSelectedActive = false
local defaultCooldown = 0.1

local function getCooldown()
	local val = tonumber(cooldownTextBox.Text)
	return val and val > 0 and val or defaultCooldown
end

-- Make all tools massless automatically
local function makeToolsMassless()
	local char = player.Character
	if not char then return end
	for _, desc in pairs(char:GetDescendants()) do
		if desc:IsA("BasePart") and desc.Name == "Handle" then
			pcall(function() desc.Massless = true end)
		end
	end
end

-- Attach tool to shirt (so it stays with player)
local function attachToolToShirt()
	local char = player.Character
	if not char then return end
	local tool = char:FindFirstChildOfClass("Tool")
	if tool then
		makeToolsMassless()
		local shirt = char:FindFirstChild("Shirt") or char:FindFirstChild("Humanoid")
		if shirt then
			tool.Parent = shirt
		end
	end
end

buttonAttachTool.MouseButton1Click:Connect(attachToolToShirt)

-- Get attached tools (inside shirt)
local function getToolsInShirt()
	local char = player.Character
	if not char then return {} end
	local shirt = char:FindFirstChild("Shirt")
	if not shirt then return {} end
	local tools = {}
	for _, t in pairs(shirt:GetChildren()) do
		if t:IsA("Tool") then table.insert(tools, t) end
	end
	return tools
end

-- Move attached tools to target
local function teleportAttachedToolsToTarget(targetPlayer)
	local tools = getToolsInShirt()
	local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
	if targetHRP then
		for _, tool in pairs(tools) do
			if tool:FindFirstChild("Handle") then
				makeToolsMassless()
				pcall(function() tool.Handle.Position = targetHRP.Position end)
			end
		end
	end
end

-- Move normal (non-attached) tools to target
local function teleportNormalToolsToTarget(targetPlayer)
	local char = player.Character
	if not char then return end
	for _, tool in pairs(char:GetChildren()) do
		if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
			makeToolsMassless()
			local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
			if targetHRP then pcall(function() tool.Handle.Position = targetHRP.Position end) end
		end
	end
end

-- Helper to check whitelist/selected state safely
local function isWhitelisted(plr)
	local val = plr:FindFirstChild("Whitelisted")
	return val and val:IsA("BoolValue") and val.Value
end

local function isSelected(plr)
	local val = plr:FindFirstChild("Selected")
	return val and val:IsA("BoolValue") and val.Value
end

-- Attach Target All (round-robin)
local function attachTargetAllPlayers()
	targetAllActive = true
	local targetIndex = 1
	while targetAllActive do
		local allPlayers = Players:GetPlayers()
		local playerCount = #allPlayers
		if playerCount > 1 then
			targetIndex = (targetIndex % playerCount) + 1
			local targetPlayer = allPlayers[targetIndex]
			if targetPlayer ~= player and not isWhitelisted(targetPlayer) and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
				teleportAttachedToolsToTarget(targetPlayer)
			end
		end
		task.wait(getCooldown())
	end
end

buttonAttachTargetAll.MouseButton1Click:Connect(function()
	if targetAllActive then
		targetAllActive = false
		buttonAttachTargetAll.Text = "Attach Target All"
		buttonAttachTargetAll.BackgroundColor3 = Color3.new(1, 1, 1)
	else
		task.spawn(attachTargetAllPlayers)
		buttonAttachTargetAll.Text = "Stop Target All"
		buttonAttachTargetAll.BackgroundColor3 = Color3.new(1, 0, 0)
	end
end)

-- Attach Selected Target
local function attachSelectedPlayers()
	attachSelectedActive = true
	while attachSelectedActive do
		for _, targetPlayer in pairs(Players:GetPlayers()) do
			if targetPlayer ~= player and isSelected(targetPlayer) and not isWhitelisted(targetPlayer) and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
				teleportAttachedToolsToTarget(targetPlayer)
			end
		end
		task.wait(getCooldown())
	end
end

buttonAttachSelected.MouseButton1Click:Connect(function()
	if attachSelectedActive then
		attachSelectedActive = false
		buttonAttachSelected.Text = "Attach Selected Target"
		buttonAttachSelected.BackgroundColor3 = Color3.new(1, 1, 1)
	else
		task.spawn(attachSelectedPlayers)
		buttonAttachSelected.Text = "Stop Attach Selected"
		buttonAttachSelected.BackgroundColor3 = Color3.new(1, 0, 0)
	end
end)

-- Normal Target All
local function normalTargetAllPlayers()
	normalTargetActive = true
	local targetIndex = 1
	while normalTargetActive do
		local allPlayers = Players:GetPlayers()
		local playerCount = #allPlayers
		if playerCount > 1 then
			local attempts, foundValid = 0, false
			while attempts < playerCount and normalTargetActive do
				targetIndex = (targetIndex % playerCount) + 1
				local candidate = allPlayers[targetIndex]
				attempts = attempts + 1
				if candidate and candidate ~= player and not isWhitelisted(candidate) and candidate.Character and candidate.Character:FindFirstChild("HumanoidRootPart") then
					teleportNormalToolsToTarget(candidate)
					foundValid = true
					break
				end
			end
		end
		task.wait(getCooldown())
	end
end

buttonNormalTargetAll.MouseButton1Click:Connect(function()
	if normalTargetActive then
		normalTargetActive = false
		buttonNormalTargetAll.Text = "Normal Target All"
		buttonNormalTargetAll.BackgroundColor3 = Color3.new(1, 1, 1)
	else
		task.spawn(normalTargetAllPlayers)
		buttonNormalTargetAll.Text = "Stop Normal Target"
		buttonNormalTargetAll.BackgroundColor3 = Color3.new(1, 0, 0)
	end
end)

-- Normal Selected Target
local function normalSelectedPlayers()
	normalSelectedActive = true
	while normalSelectedActive do
		for _, targetPlayer in pairs(Players:GetPlayers()) do
			if targetPlayer ~= player and isSelected(targetPlayer) and not isWhitelisted(targetPlayer) and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
				teleportNormalToolsToTarget(targetPlayer)
			end
		end
		task.wait(getCooldown())
	end
end

buttonNormalSelected.MouseButton1Click:Connect(function()
	if normalSelectedActive then
		normalSelectedActive = false
		buttonNormalSelected.Text = "Normal Selected Target"
		buttonNormalSelected.BackgroundColor3 = Color3.new(1, 1, 1)
	else
		task.spawn(normalSelectedPlayers)
		buttonNormalSelected.Text = "Stop Normal Selected"
		buttonNormalSelected.BackgroundColor3 = Color3.new(1, 0, 0)
	end
end)

-- Load Player List
buttonLoadList.MouseButton1Click:Connect(function()
	pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/Udklol/refs/heads/main/Playerlistv6"))()
	end)
	buttonLoadList.BackgroundColor3 = Color3.new(0, 1, 0)
	task.delay(0.15, function()
		if buttonLoadList and buttonLoadList.Parent then
			buttonLoadList:Destroy()
		end
	end)
end)

-- Toggle GUI
buttonToggleMainFrame.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)
