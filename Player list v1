-- Services
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GripTargetGui"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.Parent = playerGui

-- Create a Scrolling Frame for Main UI
local mainFrame = Instance.new("ScrollingFrame")
mainFrame.Size = UDim2.new(0, 250, 0, 300) -- Increased width
mainFrame.Position = UDim2.new(0, 0, 0.8, -250)
mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
mainFrame.BackgroundTransparency = 0.5
mainFrame.ScrollBarThickness = 10
mainFrame.ZIndex = 5
mainFrame.Visible = true
mainFrame.Parent = screenGui

-- Create UIListLayout for the main frame
local listLayout = Instance.new("UIListLayout")
listLayout.FillDirection = Enum.FillDirection.Vertical
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
listLayout.VerticalAlignment = Enum.VerticalAlignment.Top
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 5)
listLayout.Parent = mainFrame

-- Helper function to create buttons with common settings
local function createButton(parent, text, position, size)
    local button = Instance.new("TextButton")
    button.Size = size or UDim2.new(0, 80, 0, 30) -- Adjusted button size for better spacing
    button.Position = position
    button.Text = text
    button.BackgroundColor3 = Color3.new(1, 1, 1)
    button.BackgroundTransparency = 0
    button.TextColor3 = Color3.new(0, 0, 0)
    button.ZIndex = 10
    button.Parent = parent
    return button
end

-- Create UI Elements for the main GUI
local buttonToggleMainFrame = createButton(screenGui, "Toggle GUI", UDim2.new(0.5, -75, 0, 10))

-- Button to open the player list
local buttonOpenPlayerList = createButton(mainFrame, "Open Player List", UDim2.new(0, 10, 0, 50))

-- Data structures to hold states
local selectedPlayers = {}
local targetPlayers = {}
local whitelistedPlayers = {}
local highlights = {}

-- Function to display the player list GUI
local playerListFrame
local function displayPlayerList()
    if playerListFrame then
        playerListFrame:Destroy() -- Remove existing frame if it exists
    end
    
    playerListFrame = Instance.new("ScrollingFrame")
    playerListFrame.Size = UDim2.new(0, 500, 0, 300) -- Increased width
    playerListFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
    playerListFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    playerListFrame.BackgroundTransparency = 0.5
    playerListFrame.ScrollBarThickness = 10
    playerListFrame.ZIndex = 10
    playerListFrame.Visible = true
    playerListFrame.Parent = screenGui

    -- Create UIListLayout for the player list frame
    local playerListLayout = Instance.new("UIListLayout")
    playerListLayout.FillDirection = Enum.FillDirection.Vertical
    playerListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    playerListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    playerListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    playerListLayout.Padding = UDim.new(0, 5)
    playerListLayout.Parent = playerListFrame

    -- Populate player list
    for _, targetPlayer in ipairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            -- Create a frame for each player
            local playerFrame = Instance.new("Frame")
            playerFrame.Size = UDim2.new(1, 0, 0, 40)
            playerFrame.BackgroundColor3 = Color3.new(1, 1, 1)
            playerFrame.BackgroundTransparency = 0.5
            playerFrame.Parent = playerListFrame

            -- Player display name label
            local displayNameLabel = Instance.new("TextLabel")
            displayNameLabel.Size = UDim2.new(0.5, 0, 0.5, 0) -- Adjusted height for display name
            displayNameLabel.Position = UDim2.new(0, 0, 0, 0)
            displayNameLabel.Text = targetPlayer.DisplayName
            displayNameLabel.BackgroundTransparency = 1
            displayNameLabel.TextColor3 = Color3.new(0, 0, 0)
            displayNameLabel.Parent = playerFrame

            -- Player name label with @ symbol
            local nameLabel = Instance.new("TextLabel")
            nameLabel.Size = UDim2.new(0.5, 0, 0.5, 0) -- Adjusted height for username
            nameLabel.Position = UDim2.new(0, 0, 0.5, 0) -- Positioned below display name
            nameLabel.Text = "@" .. targetPlayer.Name -- Added @ symbol before username
            nameLabel.BackgroundTransparency = 1
            nameLabel.TextColor3 = Color3.new(0, 0, 0)
            nameLabel.Parent = playerFrame

            -- Selection button
            local selectButton = createButton(playerFrame, "Select", UDim2.new(0.5, 0, 0, 0), UDim2.new(0, 60, 0, 30))
            selectButton.MouseButton1Click:Connect(function()
                selectedPlayers[targetPlayer.Name] = not selectedPlayers[targetPlayer.Name] -- Toggle selection
                selectButton.BackgroundColor3 = selectedPlayers[targetPlayer.Name] and Color3.new(1, 0, 0) or Color3.new(1, 1, 1) -- Highlight selection
            end)

            -- Whitelist button
            local whitelistButton = createButton(playerFrame, "WL", UDim2.new(0.5, 70, 0, 0), UDim2.new(0, 30, 0, 30))
            whitelistButton.MouseButton1Click:Connect(function()
                whitelistedPlayers[targetPlayer.Name] = not whitelistedPlayers[targetPlayer.Name] -- Toggle whitelist
                whitelistButton.BackgroundColor3 = whitelistedPlayers[targetPlayer.Name] and Color3.new(0, 1, 0) or Color3.new(1, 1, 1) -- Highlight whitelist
            end)

            -- Highlight button
            local highlightButton = createButton(playerFrame, "Highlight", UDim2.new(0.5, 110, 0, 0), UDim2.new(0, 60, 0, 30))
            highlightButton.MouseButton1Click:Connect(function()
                if highlights[targetPlayer.Name] then
                    -- Remove highlight
                    if targetPlayer.Character then
                        local existingHighlight = targetPlayer.Character:FindFirstChild("Highlight")
                        if existingHighlight then
                            existingHighlight:Destroy() -- Remove existing highlight
                        end
                    end
                    highlightButton.BackgroundColor3 = Color3.new(1, 1, 1) -- Reset button color
                    highlights[targetPlayer.Name] = false -- Toggle highlight state
                else
                    -- Add highlight
                    local highlight = Instance.new("Highlight")
                    highlight.Parent = targetPlayer.Character
                    highlight.FillColor = Color3.new(1, 1, 0) -- Highlight color changes to yellow
                    highlight.OutlineColor = Color3.new(0, 0, 0) -- Outline color
                    highlightButton.BackgroundColor3 = Color3.new(1, 1, 0) -- Highlight button turns yellow
                    highlights[targetPlayer.Name] = true -- Set highlight state
                end
            end)

            -- Teleport button
            local tpButton = createButton(playerFrame, "TP", UDim2.new(0.5, 180, 0, 0), UDim2.new(0, 30, 0, 30))
            tpButton.MouseButton1Click:Connect(function()
                if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
                    -- Instant teleport without tweening
                    local character = player.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        character.HumanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 5, 0)) -- Instant teleport above target
                    end
                end
            end)
        end
    end
end

-- Button to open/close the player list
buttonOpenPlayerList.MouseButton1Click:Connect(function()
    if playerListFrame and playerListFrame.Parent then
        playerListFrame:Destroy() -- Close the player list if it's already open
    else
        displayPlayerList() -- Display the player list if it's not open
    end
end)

-- Toggle GUI visibility
buttonToggleMainFrame.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)
