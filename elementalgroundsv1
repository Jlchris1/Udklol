local syn = getgenv().syn
getgenv().syn = false

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()local Window = OrionLib:MakeWindow({Name = "JLhub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})local Tab = Window:MakeTab({
    Name = "main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
}) Tab:AddButton({
    Name = "turn off loops",
    Callback = function()
              _G.toggle = false
      end    
}) Tab:AddButton({
    Name = "instant spawn",
    Callback = function()
              _G.toggle = true


while _G.toggle do
wait(0.4)
local args = {
    [1] = 3
}

game:GetService("ReplicatedStorage").ClientRemotes.SpawnHandler:FireServer(unpack(args))
end
      end    
}) Tab:AddButton({
    Name = "gang zone tree",
    Callback = function()
              _G.toggle = true


while _G.toggle do
wait()
local args = {
    [1] = "Ancestor Tree"
}

game:GetService("ReplicatedStorage").ClientRemotes.GangZoneCapture:InvokeServer(unpack(args))
end
      end    
}) Tab:AddButton({
    Name = "gang point igord",
    Callback = function()
              _G.toggle = true


while _G.toggle do
wait()
local args = {
    [1] = "Mountain Igord"
}

game:GetService("ReplicatedStorage").ClientRemotes.GangZoneCapture:InvokeServer(unpack(args))
end
      end    
}) Tab:AddButton({
    Name = "gang point arena",
    Callback = function()
              _G.toggle = true


while _G.toggle do
wait()
local args = {
    [1] = "Arena"
}

game:GetService("ReplicatedStorage").ClientRemotes.GangZoneCapture:InvokeServer(unpack(args))
end
      end    
}) Tab:AddButton({
    Name = "gang point arold",
    Callback = function()
_G.toggle = true


while _G.toggle do
wait()

local args = {
    [1] = "Mountain Arold"
}

game:GetService("ReplicatedStorage").ClientRemotes.GangZoneCapture:InvokeServer(unpack(args))
end
      end    
}) local Tab = Window:MakeTab({
    Name = "crystal farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
}) Tab:AddButton({
    Name = "auto collect scrolls and crystals",
    Callback = function()
              local active = false

while true do
    local foundClickDetector = false

    -- Iterate through all descendants in the workspace
    for _, instance in ipairs(workspace:GetDescendants()) do
        -- Check if the instance is a ClickDetector itself
        if instance:IsA("ClickDetector") then
            -- Fire the ClickDetector
            fireclickdetector(instance)
            foundClickDetector = true
        end
    end

    -- Update the active flag based on whether any ClickDetector was found
    if foundClickDetector then
        active = true
    else
        if active then
            active = false
            print("No ClickDetector found. Stopping.")
        end
        wait(2.5) -- Delay before checking again when inactive
    end

    -- If active, add a slight delay to control the firing rate
    if active then
        wait(0.7) -- Adjust this delay for desired firing speed
    end
end
      end    
}) Tab:AddButton({
    Name = "not recommended when multiple are using it",
    Callback = function()
              print("button pressed")
      end    
}) local Tab = Window:MakeTab({
    Name = "auto farm quest",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
}) Tab:AddButton({
    Name = "launch auto farm buttons (read info first)",
    Callback = function()
              loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/Udklol/refs/heads/main/af"))()
      end    
}) Tab:AddButton({
	Name = "remove black screen (might be the crash cause)",
	Callback = function()
      		game:GetService("Players").LocalPlayer.PlayerGui.GameUI.BlackScreen:destroy()
  	end    
}) Tab:AddButton({
    Name = "auto take quest",
    Callback = function()
              _G.toggle = true

while _G.toggle do
wait(1.5)
for i,v in next, workspace:GetDescendants() do if v.IsA(v,'ProximityPrompt') then fireproximityprompt(v) end end
end
      end    
}) Tab:AddButton({
    Name = "click this before using auto quest taker",
    Callback = function()
              loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/lag%20reducion"))()
      end    
}) Tab:AddButton({
	Name = "WIP (work in progress)",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/switch%20tool%20gui%20v1"))()
  	end    
}) local Tab = Window:MakeTab({
    Name = "auto farm info",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
}) Tab:AddButton({
    Name = "your abilitys wont be automaticly used neither will quests",
    Callback = function()
              print("button pressed")
      end    
}) Tab:AddButton({
    Name = "you need an auto clicker for those otherwise it no work",
    Callback = function()
              print("button pressed")
      end    
}) Tab:AddButton({
    Name = "activate all buttons to farm the quests at its best",
    Callback = function()
              print("button pressed")
      end    
}) Tab:AddButton({
    Name = "this is v1 autofarm its brand New and the first one",
    Callback = function()
              print("button pressed")
      end    
}) Tab:AddButton({
    Name = "so enjoy v1 and expect v2 soon",
    Callback = function()
              print("button pressed")
      end    
}) Tab:AddButton({
    Name = "meet the best auto farm in E.G",
    Callback = function()
              print("button pressed")
      end    
}) local Tab = Window:MakeTab({
	Name = "normal quik farm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
}) Tab:AddButton({
	Name = "quik quest tp",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/quik%20normal%20farm%20tp"))()
  	end    
}) Tab:AddButton({
	Name = "better view quest data",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/better%20view%20quest"))()
  	end    
}) local Tab = Window:MakeTab({
	Name = "Auto Farm V2",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
}) Tab:AddButton({
	Name = "lock camara/fix crash issue (spawn in first otherwise it breaks)",
	Callback = function()
      		local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local LocalPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- World position to lock the camera at (separated from character)
local lockedPosition = Vector3.new(0, 0, 0)

-- Function to lock the camera
local function lockCamera()
    -- Set the camera to Scriptable mode and disable following the character
    camera.CameraSubject = nil
    camera.CameraType = Enum.CameraType.Scriptable

    -- Continuous loop on Heartbeat to keep the camera at (0, 0, 0)
    while true do
        if camera then
            camera.CFrame = CFrame.new(lockedPosition)
        end
        RunService.Heartbeat:Wait() -- Ensure this runs every frame
    end
end

-- Ensure the camera lock function runs on respawn as well
LocalPlayer.CharacterAdded:Connect(function()
    -- Wait a bit to ensure the character has fully loaded
    wait(2)
    
    -- Lock the camera once the player respawns
    lockCamera()
end)

-- If the player is already in the game, lock the camera immediately
if LocalPlayer.Character then
    lockCamera()
end

print("Camera position locked at world position (0, 0, 0) and will not follow the character, even after respawn.")


  	end    
}) Tab:AddButton({
	Name = "remove forger (use this)",
	Callback = function()
      		workspace.Interactables["Forge Information"]:destroy()
  	end    
}) Tab:AddButton({
	Name = "Auto farm V2 [beta] (recommended)",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/af%20V2%20%5BBeta%5D"))()
  	end    
}) Tab:AddButton({
	Name = "auto take quest",
	Callback = function()
      		_G.toggle = true

while _G.toggle do
wait(0.2)
for i,v in next, workspace:GetDescendants() do if v.IsA(v,'ProximityPrompt') then fireproximityprompt(v) end end
end
  	end    
})Tab:AddButton({
	Name = "click this before auto take quest",
	Callback = function()
      		local objectsToDestroy = {
    workspace:FindFirstChild("Teleporters"),
    workspace:FindFirstChild("Daily Spin"),
    workspace:FindFirstChild("InteractiveGUI")
}

for _, obj in ipairs(objectsToDestroy) do
    if obj then
        obj:Destroy()
        print(obj.Name .. " has been destroyed.")
    else
        print("Object not found.")
    end
end


  	end    
}) local Tab = Window:MakeTab({
	Name = "Pinned updates",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
}) Tab:AddButton({
	Name = "❌ = not added/not fixed/not done yet",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "✅ = added/fixed/done",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "❌✅ = Fixed for a big part",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "make v2 auto farm better than v1✅",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "fixed crash issue✅",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "lag reducion on autofarm✅",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "make auto farm faster✅ (currently available on v2)",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "made a nonlaggy auto clicker for abilitys/quests❌",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "made auto take quest (remote version)❌",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "fixed tool gui❌",
	Callback = function()
      		print("button pressed")
  	end    
}) local Tab = Window:MakeTab({
	Name = "auto farm v3 (recommended)",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
}) Tab:AddButton({
	Name = "auto farm v3 (fixed crash for alot of bit and farms more before crashing) lower profit total",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/AutoFarmV3%5BWIP%5D%5BBeta%5D"))()
  	end    
}) Tab:AddButton({
	Name = "use this before auto farming v2 (recommended)",
	Callback = function()
      		local objectsToDestroy = {
    workspace:FindFirstChild("Teleporters"),
    workspace:FindFirstChild("Daily Spin"),
    workspace:FindFirstChild("InteractiveGUI")
}

for _, obj in ipairs(objectsToDestroy) do
    if obj then
        obj:Destroy()
        print(obj.Name .. " has been destroyed.")
    else
        print("Object not found.")
    end
end

  	end    
}) Tab:AddButton({
	Name = "it will ignore gravitron npcs but it farms demons now",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "might be alot slower but atleast were not getting less realistic profit",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "farms 400-700 an hour",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "v4 will target gravitrons but will have an diffrent targetting system on them",
	Callback = function()
      		print("button pressed")
  	end    
}) Tab:AddButton({
	Name = "just be patient ok?",
	Callback = function()
      		print("button pressed")
  	end    
}) local Tab = Window:MakeTab({
	Name = "full fixed v2",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
}) Tab:AddButton({
	Name = "full fixed v2 (unfinished)",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/Jlchris1/NoWayINeededANewFileForE.Gbruh/refs/heads/main/auto%20farm%20full%20fixed%20version%20comming%20soon"))()
  	end    
})

getgenv().syn = syn
