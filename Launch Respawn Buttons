local player = game:GetService("Players").LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

-- GUI setup for your ScreenGui with high ZIndex values
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling  -- Ensures proper layering within GUI
screenGui.DisplayOrder = 1000  -- Ensure the screen GUI is on top of others

-- Small toggle button on the left side of the screen (15x15 pixels)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 15, 0, 15)  -- Updated size to 15x15
toggleButton.Position = UDim2.new(0, 5, 0.5, 0)  -- Positioned on the left side
toggleButton.Text = ""
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButton.BorderSizePixel = 0
toggleButton.ZIndex = 10000000000  -- Set high ZIndex to be above other GUIs
toggleButton.Parent = screenGui

-- Frame to hold the Antis buttons (Anti Void, God Mode, etc.)
local antiFrame = Instance.new("Frame")
antiFrame.Size = UDim2.new(0, 150, 0, 100)
antiFrame.Position = UDim2.new(1, -320, 0.5, -155)  -- Positioned to the left of Antis button
antiFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
antiFrame.Visible = false  -- Initially hidden
antiFrame.ZIndex = 10000000000  -- Ensure it's above other GUIs
antiFrame.Parent = screenGui

-- Create "Antis" button (still visible outside the frame)
local antisButton = Instance.new("TextButton")
antisButton.Size = UDim2.new(0, 100, 0, 30)
antisButton.Position = UDim2.new(1, -110, 0.5, -105)  -- Positioned as per your original request
antisButton.Text = "Antis"
antisButton.TextSize = 16
antisButton.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
antisButton.TextColor3 = Color3.fromRGB(255, 255, 255)
antisButton.ZIndex = 10000000000  -- Ensure it's on top of other GUIs
antisButton.Parent = screenGui

-- Create "Anti Void" button inside the frame
local antiVoidButton = Instance.new("TextButton")
antiVoidButton.Size = UDim2.new(0, 140, 0, 30)
antiVoidButton.Position = UDim2.new(0, 5, 0, 5)  -- Inside the frame
antiVoidButton.Text = "Anti Void"
antiVoidButton.TextSize = 14
antiVoidButton.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
antiVoidButton.TextColor3 = Color3.fromRGB(255, 255, 255)
antiVoidButton.ZIndex = 10000000000  -- Ensure it's above other GUIs
antiVoidButton.Parent = antiFrame

-- Create "God Mode" button inside the frame
local godModeButton = Instance.new("TextButton")
godModeButton.Size = UDim2.new(0, 140, 0, 30)
godModeButton.Position = UDim2.new(0, 5, 0, 40)  -- Inside the frame
godModeButton.Text = "God Mode"
godModeButton.TextSize = 14
godModeButton.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
godModeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
godModeButton.ZIndex = 10000000000  -- Ensure it's above other GUIs
godModeButton.Parent = antiFrame

-- Variable to store God Mode state and humanoid reference
local godModeEnabled = false
local currentHumanoid

-- Function to apply jump velocity for God Mode
local function applyJumpVelocity()
    if godModeEnabled then
        local character = player.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.Velocity = Vector3.new(0, 80, 0)
            end
        end
    end
end

-- Ensure camera keeps focusing on the humanoid
local function updateCameraFocus()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            workspace.CurrentCamera.CameraSubject = humanoid -- Continuously set camera focus to the humanoid
        end
    end
end

-- Update camera focus on humanoid at regular intervals
game:GetService("RunService").Heartbeat:Connect(updateCameraFocus)

-- God Mode functionality
godModeButton.MouseButton1Click:Connect(function()
    local character = player.Character or player.CharacterAdded:Wait()
    local oldHumanoid = character:FindFirstChildOfClass("Humanoid")
    if oldHumanoid then
        godModeEnabled = true
        currentHumanoid = oldHumanoid
        local newHumanoid = oldHumanoid:Clone()
        newHumanoid.Parent = character
        workspace.CurrentCamera.CameraSubject = newHumanoid  -- Make the camera follow the new humanoid
        task.wait(0.2)
        oldHumanoid:Destroy()
    end
end)

-- Listen for jump input (both PC and mobile)
UserInputService.JumpRequest:Connect(function()
    if godModeEnabled then
        applyJumpVelocity()
    end
end)

-- Refresh and Respawn buttons
local spawnPosition

-- Create "Refresh" button
local refreshButton = Instance.new("TextButton")
refreshButton.Size = UDim2.new(0, 65, 0, 20)
refreshButton.Position = UDim2.new(1, -100, 0.5, -60)  -- Restoring original position
refreshButton.Text = "Refresh"
refreshButton.TextSize = 12
refreshButton.ZIndex = 10000000000
refreshButton.Parent = screenGui

-- Create "Respawn" button
local respawnButton = Instance.new("TextButton")
respawnButton.Size = UDim2.new(0, 65, 0, 20)
respawnButton.Position = UDim2.new(1, -100, 0.5, 0)  -- Restoring original position
respawnButton.Text = "Respawn"
respawnButton.TextSize = 12
respawnButton.ZIndex = 10000000000
respawnButton.Parent = screenGui

-- Function to reset the character
local function resetCharacter(spawnPosition)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Health = 0
    local newCharacter = player.CharacterAdded:Wait()
    local newHumanoidRootPart = newCharacter:WaitForChild("HumanoidRootPart")
    if spawnPosition then
        newHumanoidRootPart.CFrame = CFrame.new(spawnPosition)
    end
    local newHumanoid = newCharacter:WaitForChild("Humanoid")
    newHumanoid.Health = newHumanoid.MaxHealth
end

-- Refresh Button Functionality
refreshButton.MouseButton1Click:Connect(function()
    spawnPosition = player.Character.HumanoidRootPart.Position
    resetCharacter(spawnPosition)
    spawnPosition = nil
end)

-- Respawn Button Functionality
respawnButton.MouseButton1Click:Connect(function()
    resetCharacter()
end)

-- Create "Jump" button
local jumpButton = Instance.new("TextButton")
jumpButton.Size = UDim2.new(0, 65, 0, 20)
jumpButton.Position = UDim2.new(1, -100, 0.5, 40)  -- Restoring original position
jumpButton.Text = "Jump"
jumpButton.TextSize = 12
jumpButton.ZIndex = 10000000000
jumpButton.Parent = screenGui

-- Jump Button Functionality
jumpButton.MouseButton1Click:Connect(function()
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.Velocity = Vector3.new(0, 80, 0)
        end
    end
end)

-- Hide/Show all buttons except the toggle button
local buttonsHidden = false  -- Track visibility state
toggleButton.MouseButton1Click:Connect(function()
    buttonsHidden = not buttonsHidden  -- Toggle the state
    local allButtons = { antisButton, refreshButton, respawnButton, jumpButton, antiVoidButton, godModeButton }

    for _, button in ipairs(allButtons) do
        button.Visible = not buttonsHidden
    end
end)

-- Toggle Anti Frame visibility on "Antis" button click
antisButton.MouseButton1Click:Connect(function()
    antiFrame.Visible = not antiFrame.Visible  -- Toggle the visibility of the Anti Frame
end)
